name: Automated Release Process

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (x.y.z)"
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate version format
        run: |
          if ! [[ ${{ inputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in the format x.y.z (e.g., 1.0.0)"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create Issue
        run: gh issue create --title "Release `${{ inputs.version }}`" --body "Automating release process" --label "release"

      - name: Create Backend Branches
        run: |
          gh repo clone my-org/backend-repo
          cd backend-repo
          git checkout -b release/${{ inputs.version }} origin/develop
          git push origin release/${{ inputs.version }}

          git checkout -b release/${{ inputs.version }}-dev origin/develop
          git commit --allow-empty -m "chore: empty commit for release"
          git push origin release/${{ inputs.version }}-dev

      - name: Open Backend PRs
        run: |
          gh pr create --repo my-org/backend-repo --base main --head release/${{ inputs.version }} --title "Release `${{ inputs.version }}` to `main`" --body "Merging release branch"
          gh pr create --repo my-org/backend-repo --base develop --head release/${{ inputs.version }}-dev --title "Release `${{ inputs.version }}-dev` to `develop`" --body "Merging dev branch"

      - name: Create Draft Release
        run: gh release create ${{ inputs.version }} --draft --notes "Initial draft for release `${{ inputs.version }}`"
